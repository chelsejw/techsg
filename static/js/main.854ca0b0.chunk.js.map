{"version":3,"sources":["components/Nav.js","components/StackBtn.js","components/TableRow.js","components/Table.js","components/MainData.js","components/SupportedHeader.js","components/PaginatorBtn.js","components/Paginator.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","StackBtn","icon_name","name","toLowerCase","TableRow","stackButtons","data","stack","map","tech","i","key","scope","num","company","target","rel","link","title","length","created","moment","require","Table","rows","job","index","created_at","format","firstIndex","MainData","failure","loading","lastUpdate","css","color","size","longLoadTime","SupportedHeader","stackItems","item","PaginatorBtn","current","onClick","setPage","text","Paginator","info","next","prev","count","pageButtons","totalPages","Math","ceil","push","App","useState","jobs","setJobs","setLoading","setFailure","setLastUpdate","setStack","currentPage","setCurrentPage","sort","pagination","setPagination","queries","setLongLoadTime","useEffect","setTimeout","join","axios","get","then","res","console","log","results","previous","catch","err","itemsPerPage","firstItemIndex","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.854ca0b0.chunk.js","sourcesContent":["import React from 'react'\n\nconst Nav = (props) => {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark\">\n        <a className=\"navbar-brand\" href=\"#\">\n          Tech@SG\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"#\">\n                Home <span className=\"sr-only\">(current)</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n}\n\nexport default Nav ","import React from 'react'\n\nconst StackBtn = (props)=> {\n\n  //Devicons not supported: Firebase, Flutter, GraphQL\n\n\n    let icon_name = props.name.toLowerCase()\n\n    switch (icon_name) {\n      case \"express\":\n        icon_name = \"expressjs\"\n        break;\n      case \"mongo\":\n        icon_name = \"mongodb\"\n        break;\n      case \".net\":\n        icon_name = \"dotnet\"\n        break;\n      case \"aws\":\n        icon_name = \"amazonwebservices\"\n        break;\n      case \"node\":\n        icon_name = \"nodejs\";\n        break;\n      case \"golang\":\n        icon_name = \"go\";\n        break;\n      case \"c#\":\n        icon_name = \"csharp\";\n        break;\n      case \"angular\":\n        icon_name = \"angularjs\";\n        break;\n      case \"c++\":\n        icon_name = \"cplusplus\";\n        break;\n      case \"vue\":\n        icon_name = \"vuejs\"\n        break;\n      default:\n        break;\n    }\n\n    return (\n      <div className={`stack-btn mr-2 mb-1`}>\n        <i\n          className={`devicon-${icon_name}-plain stack-${icon_name}`}\n        ></i>\n      </div>\n    );\n}\n\nexport default StackBtn","import React from 'react'\nimport StackBtn from './StackBtn'\n\nconst TableRow = (props) => {\n\n    const stackButtons = props.data.stack.map((tech, i) => {\n        return <StackBtn key={i} name={tech} />;\n    })\n\n    return (\n      <tr>\n        <th scope=\"row\">{props.num}</th>\n        <td>{props.data.company}</td>\n        <td>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={props.data.link}>\n            {props.data.title}\n          </a>\n        </td>\n        <td>{stackButtons.length > 0 ? stackButtons : \"-\"}</td>\n        <td>{props.created}</td>\n      </tr>\n    );\n}\n\nexport default TableRow","import React from 'react'\nimport TableRow from './TableRow'\nvar moment = require('moment'); // require\n\n\nconst Table = (props) => {\n    const rows = props.data.map((job, index) => {\n        return (\n            <TableRow key={job.id} created={moment(job.created_at).format(\"DD/MM/YYYY\")} num={props.firstIndex+index} data={job}/>\n        )\n    })\n\n    return (\n      <div className=\"table-responsive\">\n        <table className=\"mt-2 table table-dark\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Company</th>\n              <th scope=\"col\">Title</th>\n              <th scope=\"col\">Stack</th>\n              <th scope=\"col\">Added</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </table>\n\n        {props.data.length < 1 && (\n          <div className=\"text-center mt-3\">\n            <span className=\"main-loading-txt\">There is no data.</span>\n          </div>\n        )}\n      </div>\n    );\n}\n\nexport default Table","import React from 'react'\nimport Table from './Table'\nimport RingLoader from 'react-spinners/RingLoader'\n\nconst MainData = (props) => {\n\n    const {failure, loading, lastUpdate, data} = props\n\n    return (\n      <div>\n        {!failure && !loading && (\n          <div>\n            <div className=\"text-right last-add-jobs\">\n              Last added jobs: {lastUpdate} SGT\n            </div>\n            <Table firstIndex={props.firstIndex} data={data} />\n          </div>\n        )}\n        {loading && (\n          <div className=\"my-5\">\n            <RingLoader\n              css={\"margin: 0 auto;\"}\n              color={\"#d84242\"}\n              size={150}\n              loading={loading}\n            />\n            <div className=\"text-center mt-3\">\n              <span className=\"main-loading-txt\">Getting jobs...</span>\n              {props.longLoadTime &&\n                \"This is taking a while because Heroku is slow... I promise I'll find a better home for my backend...\"}\n            </div>\n          </div>\n        )}\n\n        {failure && (\n          <div className=\"text-center mt-3\">\n            <span className=\"main-loading-txt\">Failed to get jobs.</span>\n          </div>\n        )}\n      </div>\n    );\n}\n\nexport default MainData","import React from 'react'\nimport StackBtn from \"./StackBtn\";\n\nconst SupportedHeader = (props)=> {\n\n    const stackItems = props.stack.map((item) => {\n      return <StackBtn name={item.name} />;\n    });\n\n    return (\n        <div className=\"mb-3\">\n          <div className=\"text-center\">Supported Technologies as of {props.lastUpdate}</div>\n          <div className=\"mt-3 w-75 mx-auto text-center\">{stackItems}</div>\n        </div>\n    )\n}\n\nexport default SupportedHeader","import React from 'react'\nconst PaginatorBtn = (props)=> {\n    return (\n      <button\n        className={`direction-btn ${props.current && \"direction-btn-active\"}`}\n        onClick={() => {\n          props.setPage(props.num);\n        }}\n      >\n        {props.text}\n      </button>\n    );\n}\n\nexport default PaginatorBtn","import React from 'react'\nimport PaginatorBtn from './PaginatorBtn'\nconst Paginator = (props)=> {\n\n    const {next, prev, count} = props.info\n    const current = props.current\n    let pageButtons = [];\n\n    let totalPages = Math.ceil(count/20)\n\n    for (let i=current-2; i < current+3; i++) {\n      if (i > 0 && i <=totalPages) {\n        pageButtons.push(\n          <PaginatorBtn\n            current={i===current ? true : false}\n            setPage={props.setPage}\n            num={i}\n            text={i}\n          />\n        );\n      }\n    }\n\n\n    return (\n      <div className=\"my-3 text-center\">\n      \n        <div className=\"pg-btns\">\n          {prev && (\n            <PaginatorBtn setPage={props.setPage} num={current - 1} text=\"<\" />\n          )}\n          {pageButtons}\n          {next && (\n            <PaginatorBtn setPage={props.setPage} num={current + 1} text=\">\" />\n          )}\n        </div>\n      </div>\n    );\n}\n\nexport default Paginator","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Nav from './components/Nav'\nimport moment from 'moment'\nimport Options from './components/Options'\nimport MainData from './components/MainData'\nimport SupportedHeader from './components/SupportedHeader'\nimport Paginator from './components/Paginator'\n\nconst App = () => {\n    const [jobs, setJobs] = useState([]);\n    const [loading, setLoading] = useState(null)\n    const [failure, setFailure] = useState(false)\n    const [lastUpdate, setLastUpdate] = useState({})\n    const [stack, setStack] = useState([])\n    const [currentPage, setCurrentPage] = useState(1)\n    const [sort, setSort] = useState(\"default\")\n    const [pagination, setPagination] = useState({})\n    const [company, setCompany] = useState(null)\n    const [queries, setQueries] = useState(null)\n    const [longLoadTime, setLongLoadTime] = useState(false)\n\n    useEffect(() => {\n      setLoading();\n      setTimeout(()=> {\n        setLongLoadTime(true)\n      }, 4000)\n      let stackUrlString;\n      if (queries && queries.length > 0) {\n        stackUrlString = `&stack=${queries.join(\"&stack=\")}`\n      }\n      let companyUrlString = \"\"\n      if (company) {\n        companyUrlString = `&company=${company}`\n      }\n        axios.get(`https://tech-sg.herokuapp.com/jobs/?page=${currentPage}`)\n        .then((res) => {\n          console.log(res)\n            setJobs(res.data.results);\n            setPagination({\n              count: res.data.count,\n              next: res.data.next,\n              prev: res.data.previous,\n            })\n            if (res.data.results.length > 0) {\n              setLastUpdate((prev) => {\n                return {\n                  ...prev,\n                  jobs: res.data.results[0].created_at,\n                };\n              });\n            }\n            setLoading(false)\n            setLongLoadTime(false)\n        })\n        .catch((err) => {\n          setLoading(false)\n          setFailure(true)\n          console.log(`Error in axios request`, err)\n        })\n\n        axios\n          .get(\"https://tech-sg.herokuapp.com/tech\")\n          .then((res) => {\n            setStack(res.data);\n            setLastUpdate((prev) => {\n              return {\n                ...prev,\n                tech: res.data[res.data.length - 1].created_at,\n              };\n            });\n          })\n          .catch((err) => {\n            console.log(`Error in axios request for tech`, err);\n          });\n    }, []);\n\n    useEffect(()=> {\n      setLoading(true)\n      let stackUrlString;\n      if (queries && queries.length > 0) {\n        stackUrlString = `&stack=${queries.join(\"&stack=\")}`;\n      }\n      let companyUrlString = \"\";\n      if (company) {\n        companyUrlString = `&company=${company}`;\n      }\n        axios\n          .get(`https://tech-sg.herokuapp.com/jobs?page=${currentPage}`)\n          .then((res) => {\n            console.log(res.data);\n            setJobs(res.data.results);\n            setPagination({\n              count: res.data.count,\n              next: res.data.next,\n              prev: res.data.previous,\n            });\n            setLoading(false);\n          })\n          .catch((err) => {\n            setLoading(false);\n            setFailure(true);\n            console.log(`Error in axios request`, err);\n          });\n\n    }, [currentPage, queries, company, sort])\n\n    useEffect(()=> {\n      console.log(jobs)\n      console.log(stack)\n    }, [jobs, stack, lastUpdate])\n\n    const firstItemIndex = (itemsPerPage, currentPage) => {\n      return itemsPerPage*(currentPage-1)+1\n    }\n\n\n    return (\n      <div>\n        <Nav />\n        <div className=\"container\">\n          <h1 className=\"text-center main-header mb-2\">Tech@SG</h1>\n\n          <SupportedHeader\n            lastUpdate={moment(lastUpdate.tech).format(\"DD MMMM YYYY\")}\n            stack={stack}\n          />\n\n          {/* <Options stack={stack} /> */}\n          \n          <Paginator\n            current={currentPage}\n            info={pagination}\n            setPage={setCurrentPage}\n          />\n\n          <MainData\n            firstIndex={firstItemIndex(20, currentPage)}\n            longLoadTime={longLoadTime}\n            loading={loading}\n            failure={failure}\n            lastUpdate={moment(lastUpdate.jobs).format(\"DD MMM, h:mm:ss a\")}\n            data={jobs}\n          />\n\n          <Paginator\n            current={currentPage}\n            info={pagination}\n            setPage={setCurrentPage}\n          />\n        </div>\n      </div>\n    );\n\n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}